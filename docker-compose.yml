version: '3.9'

services:
  nginx:
    container_name: ${APP_NAME:-app}-nginx
    build: 
      context: ./nginx
      args:
        - NGINX_IMAGE=nginx:${NGINX_VERSION:-stable-alpine}
        - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
    restart: always
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - client
      - server
    networks:
      - app-network

  server:
    container_name: ${APP_NAME:-app}-server
    restart: always
    build:
      target: ${TARGET:-development}
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server/src:/app/src
    depends_on:
      - postgres
    networks:
      - app-network

  client:
    container_name: ${APP_NAME:-app}-client
    restart: always
    build:
      target: ${TARGET:-development}
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client/src:/app/src
    environment:
      - WDS_SOCKET_PORT=0
    stdin_open: true
    tty: true
    networks:
      - app-network

  postgres:
    container_name: ${APP_NAME:-app}-postgres
    image: postgres:14-alpine
    restart: always
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network

  pgadmin:
    container_name: ${APP_NAME:-app}-pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - ${PGADMIN_PORT:-80}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-pgadmin4}
    networks:
      - app-network

  redis:
    container_name: ${APP_NAME:-app}-redis
    image: redis:6.2-alpine
    restart: always
    command:
      [
        "redis-server",
        "/usr/local/etc/redis/redis.conf",
        "--bind",
        "redis",
        "--port",
        "6379"
      ]
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - app-network

  redis-commander:
    container_name: ${APP_NAME:-app}-redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    hostname: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:${REDIS_PORT:-6379}
    ports:
      - "${REDIS_COMMANDER_PORT:-8081}:8081"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    name: ${APP_NAME:-app}-network
